# Create variable based on request method (POST | anything else)
map $request_method $limit_key {
    POST $binary_remote_addr;
    default "";
}

# Rate limit zone using the mapped variable
# Currently set to 1 req/minute
# Memory capacity of ~16,000 IP addresses
limit_req_zone $limit_key zone=mylimit:1m rate=1r/m;

server {
    listen 80;
    server_name davidbenjamin.dev www.davidbenjamin.dev;

    if ($host = davidbenjamin.dev) {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name davidbenjamin.dev;

    # Flask API backend (rate-limited)
    location /api/ {
        limit_req zone=mylimit nodelay;
        proxy_pass http://myportfolio-backend:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    # Next.js frontend
    location / {
        proxy_pass http://myportfolio-frontend:80;  # or :3000 if running Next.js dev server
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    # Grafana dashboard
    location /grafana/ {
        proxy_pass http://138.197.43.79:3001/;  # Grafana container name and internal port
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Optional: handle websockets (needed for Grafana panels)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    ssl_certificate /etc/letsencrypt/live/davidbenjamin.dev/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/davidbenjamin.dev/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/davidbenjamin.dev/chain.pem;

    # SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
}
